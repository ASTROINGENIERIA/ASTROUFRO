package alma.acs.tmcdb;
// Generated Dec 3, 2018 9:54:59 PM by Hibernate Tools 4.3.1.Final


import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * ReductionThreshold generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`REDUCTIONTHRESHOLD`"
)
public class ReductionThreshold extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer alarmDefinitionId;
     protected Configuration configuration;
     protected AlarmDefinition alarmDefinition;
     protected Integer value;

    public ReductionThreshold() {
    }
   
       @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="alarmDefinition"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="`ALARMDEFINITIONID`", unique=true, nullable=false)
    public Integer getAlarmDefinitionId() {
        return this.alarmDefinitionId;
    }
    
    public void setAlarmDefinitionId(Integer alarmDefinitionId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("alarmDefinitionId", this.alarmDefinitionId, this.alarmDefinitionId = alarmDefinitionId);
        else
            this.alarmDefinitionId = alarmDefinitionId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`CONFIGURATIONID`", nullable=false)
    public Configuration getConfiguration() {
        return this.configuration;
    }
    
    public void setConfiguration(Configuration configuration) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("configuration", this.configuration, this.configuration = configuration);
        else
            this.configuration = configuration;
    }


@OneToOne(cascade=CascadeType.PERSIST, fetch=FetchType.LAZY)@Cascade( {org.hibernate.annotations.CascadeType.SAVE_UPDATE, org.hibernate.annotations.CascadeType.LOCK} )@PrimaryKeyJoinColumn
    public AlarmDefinition getAlarmDefinition() {
        return this.alarmDefinition;
    }
    
    public void setAlarmDefinition(AlarmDefinition alarmDefinition) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("alarmDefinition", this.alarmDefinition, this.alarmDefinition = alarmDefinition);
        else
            this.alarmDefinition = alarmDefinition;
    }


    
    @Column(name="`VALUE`", nullable=false)
    public Integer getValue() {
        return this.value;
    }
    
    public void setValue(Integer value) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("value", this.value, this.value = value);
        else
            this.value = value;
    }





}


