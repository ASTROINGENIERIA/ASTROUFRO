package alma.acs.tmcdb;
// Generated Dec 3, 2018 9:54:59 PM by Hibernate Tools 4.3.1.Final


import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * AlarmDefinition generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`ALARMDEFINITION`"
    , uniqueConstraints =  @UniqueConstraint(columnNames={"`CONFIGURATIONID`", "`FAULTFAMILY`", "`FAULTMEMBER`", "`FAULTCODE`"})
)
public class AlarmDefinition extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer alarmDefinitionId;
     protected Configuration configuration;
     protected String faultFamily;
     protected String faultMember;
     protected String faultCode;
     private Set<ReductionLink> reductionLinksForParentalarmdefid = new HashSet<ReductionLink>(0);
     private Set<ReductionLink> reductionLinksForChildalarmdefid = new HashSet<ReductionLink>(0);
     protected ReductionThreshold reductionThreshold;

    public AlarmDefinition() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="AlarmD_seq")}
	)

    
    @Column(name="`ALARMDEFINITIONID`", unique=true, nullable=false)
    public Integer getAlarmDefinitionId() {
        return this.alarmDefinitionId;
    }
    
    public void setAlarmDefinitionId(Integer alarmDefinitionId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("alarmDefinitionId", this.alarmDefinitionId, this.alarmDefinitionId = alarmDefinitionId);
        else
            this.alarmDefinitionId = alarmDefinitionId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`CONFIGURATIONID`", nullable=false)
    public Configuration getConfiguration() {
        return this.configuration;
    }
    
    public void setConfiguration(Configuration configuration) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("configuration", this.configuration, this.configuration = configuration);
        else
            this.configuration = configuration;
    }


    
    @Column(name="`FAULTFAMILY`", nullable=false, length=256)
    public String getFaultFamily() {
        return this.faultFamily;
    }
    
    public void setFaultFamily(String faultFamily) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("faultFamily", this.faultFamily, this.faultFamily = faultFamily);
        else
            this.faultFamily = faultFamily;
    }


    
    @Column(name="`FAULTMEMBER`", nullable=false, length=256)
    public String getFaultMember() {
        return this.faultMember;
    }
    
    public void setFaultMember(String faultMember) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("faultMember", this.faultMember, this.faultMember = faultMember);
        else
            this.faultMember = faultMember;
    }


    
    @Column(name="`FAULTCODE`", nullable=false, length=256)
    public String getFaultCode() {
        return this.faultCode;
    }
    
    public void setFaultCode(String faultCode) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("faultCode", this.faultCode, this.faultCode = faultCode);
        else
            this.faultCode = faultCode;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="alarmDefinitionByParentalarmdefid")
    public Set<ReductionLink> getReductionLinksForParentalarmdefid() {
        return this.reductionLinksForParentalarmdefid;
    }
    
    public void setReductionLinksForParentalarmdefid(Set<ReductionLink> reductionLinksForParentalarmdefid) {    
    	this.reductionLinksForParentalarmdefid = reductionLinksForParentalarmdefid;
    }

	public void addReductionLinksForParentalarmdefid(Set<ReductionLink> elements) {
		if( this.reductionLinksForParentalarmdefid != null )
			for(Iterator<ReductionLink> it = elements.iterator(); it.hasNext(); )
				addReductionLinkToReductionLinksForParentalarmdefid((ReductionLink)it.next());
	}

	public void addReductionLinkToReductionLinksForParentalarmdefid(ReductionLink element) {
		if( !this.reductionLinksForParentalarmdefid.contains(element) ) {
			this.reductionLinksForParentalarmdefid.add(element);
		}
	}


@OneToMany(fetch=FetchType.LAZY, mappedBy="alarmDefinitionByChildalarmdefid")
    public Set<ReductionLink> getReductionLinksForChildalarmdefid() {
        return this.reductionLinksForChildalarmdefid;
    }
    
    public void setReductionLinksForChildalarmdefid(Set<ReductionLink> reductionLinksForChildalarmdefid) {    
    	this.reductionLinksForChildalarmdefid = reductionLinksForChildalarmdefid;
    }

	public void addReductionLinksForChildalarmdefid(Set<ReductionLink> elements) {
		if( this.reductionLinksForChildalarmdefid != null )
			for(Iterator<ReductionLink> it = elements.iterator(); it.hasNext(); )
				addReductionLinkToReductionLinksForChildalarmdefid((ReductionLink)it.next());
	}

	public void addReductionLinkToReductionLinksForChildalarmdefid(ReductionLink element) {
		if( !this.reductionLinksForChildalarmdefid.contains(element) ) {
			this.reductionLinksForChildalarmdefid.add(element);
		}
	}


@OneToOne(fetch=FetchType.LAZY, mappedBy="alarmDefinition")
    public ReductionThreshold getReductionThreshold() {
        return this.reductionThreshold;
    }
    
    public void setReductionThreshold(ReductionThreshold reductionThreshold) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("reductionThreshold", this.reductionThreshold, this.reductionThreshold = reductionThreshold);
        else
            this.reductionThreshold = reductionThreshold;
    }



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AlarmDefinition) ) return false;
		 AlarmDefinition castOther = ( AlarmDefinition ) other;

		 return ( (this.getConfiguration()==castOther.getConfiguration()) || ( this.getConfiguration()!=null && castOther.getConfiguration()!=null && this.getConfiguration().equals(castOther.getConfiguration()) ) )
 && ( (this.getFaultFamily()==castOther.getFaultFamily()) || ( this.getFaultFamily()!=null && castOther.getFaultFamily()!=null && this.getFaultFamily().equals(castOther.getFaultFamily()) ) )
 && ( (this.getFaultMember()==castOther.getFaultMember()) || ( this.getFaultMember()!=null && castOther.getFaultMember()!=null && this.getFaultMember().equals(castOther.getFaultMember()) ) )
 && ( (this.getFaultCode()==castOther.getFaultCode()) || ( this.getFaultCode()!=null && castOther.getFaultCode()!=null && this.getFaultCode().equals(castOther.getFaultCode()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         result = 37 * result + ( getConfiguration() == null ? 0 : this.getConfiguration().hashCode() );
         result = 37 * result + ( getFaultFamily() == null ? 0 : this.getFaultFamily().hashCode() );
         result = 37 * result + ( getFaultMember() == null ? 0 : this.getFaultMember().hashCode() );
         result = 37 * result + ( getFaultCode() == null ? 0 : this.getFaultCode().hashCode() );
         
         
         
         return result;
   }


}


