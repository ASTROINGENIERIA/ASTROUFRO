package alma.acs.tmcdb;
// Generated Dec 3, 2018 9:54:59 PM by Hibernate Tools 4.3.1.Final


import alma.hibernate.util.StringEnumUserType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;

/**
 * AcsService generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`ACSSERVICE`"
)
@TypeDef(name="AcsServiceServiceType", typeClass=StringEnumUserType.class,
   parameters={ @Parameter(name="enumClassName", value="alma.acs.tmcdb.AcsServiceServiceType") })
public class AcsService extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer acsServiceId;
     protected Configuration configuration;
     protected Computer computer;
     protected AcsServiceServiceType serviceType;
     protected String serviceInstanceName;

    public AcsService() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="AcsService_seq")}
	)

    
    @Column(name="`ACSSERVICEID`", unique=true, nullable=false)
    public Integer getAcsServiceId() {
        return this.acsServiceId;
    }
    
    public void setAcsServiceId(Integer acsServiceId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("acsServiceId", this.acsServiceId, this.acsServiceId = acsServiceId);
        else
            this.acsServiceId = acsServiceId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`CONFIGURATIONID`", nullable=false)
    public Configuration getConfiguration() {
        return this.configuration;
    }
    
    public void setConfiguration(Configuration configuration) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("configuration", this.configuration, this.configuration = configuration);
        else
            this.configuration = configuration;
    }


@ManyToOne(cascade=CascadeType.PERSIST, fetch=FetchType.LAZY)@Cascade( {org.hibernate.annotations.CascadeType.SAVE_UPDATE, org.hibernate.annotations.CascadeType.LOCK} )
    @JoinColumn(name="`COMPUTERID`", nullable=false)
    public Computer getComputer() {
        return this.computer;
    }
    
    public void setComputer(Computer computer) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("computer", this.computer, this.computer = computer);
        else
            this.computer = computer;
    }


    
    @Column(name="`SERVICETYPE`", nullable=false, length=16777216)
	@Type(type="AcsServiceServiceType")
    public AcsServiceServiceType getServiceType() {
        return this.serviceType;
    }
    
    public void setServiceType(AcsServiceServiceType serviceType) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("serviceType", this.serviceType, this.serviceType = serviceType);
        else
            this.serviceType = serviceType;
    }


    
    @Column(name="`SERVICEINSTANCENAME`", length=256)
    public String getServiceInstanceName() {
        return this.serviceInstanceName;
    }
    
    public void setServiceInstanceName(String serviceInstanceName) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("serviceInstanceName", this.serviceInstanceName, this.serviceInstanceName = serviceInstanceName);
        else
            this.serviceInstanceName = serviceInstanceName;
    }





}


