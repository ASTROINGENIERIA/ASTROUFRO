package alma.acs.tmcdb;
// Generated Dec 3, 2018 9:54:59 PM by Hibernate Tools 4.3.1.Final


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * MasterComponent generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`MASTERCOMPONENT`"
    , uniqueConstraints =  @UniqueConstraint(columnNames="`COMPONENTID`")
)
public class MasterComponent extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer masterComponentId;
     protected Component component;
     protected String subsystemName;

    public MasterComponent() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="MasterC_seq")}
	)

    
    @Column(name="`MASTERCOMPONENTID`", unique=true, nullable=false)
    public Integer getMasterComponentId() {
        return this.masterComponentId;
    }
    
    public void setMasterComponentId(Integer masterComponentId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("masterComponentId", this.masterComponentId, this.masterComponentId = masterComponentId);
        else
            this.masterComponentId = masterComponentId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`COMPONENTID`", unique=true, nullable=false)
    public Component getComponent() {
        return this.component;
    }
    
    public void setComponent(Component component) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("component", this.component, this.component = component);
        else
            this.component = component;
    }


    
    @Column(name="`SUBSYSTEMNAME`", nullable=false, length=256)
    public String getSubsystemName() {
        return this.subsystemName;
    }
    
    public void setSubsystemName(String subsystemName) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("subsystemName", this.subsystemName, this.subsystemName = subsystemName);
        else
            this.subsystemName = subsystemName;
    }



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof MasterComponent) ) return false;
		 MasterComponent castOther = ( MasterComponent ) other;

		 return ( (this.getComponent()==castOther.getComponent()) || ( this.getComponent()!=null && castOther.getComponent()!=null && this.getComponent().equals(castOther.getComponent()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         result = 37 * result + ( getComponent() == null ? 0 : this.getComponent().hashCode() );
         
         return result;
   }


}


