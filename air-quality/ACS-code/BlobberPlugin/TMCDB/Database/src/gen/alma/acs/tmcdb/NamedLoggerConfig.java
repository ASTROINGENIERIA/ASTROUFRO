package alma.acs.tmcdb;
// Generated Dec 3, 2018 9:54:59 PM by Hibernate Tools 4.3.1.Final


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * NamedLoggerConfig generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`NAMEDLOGGERCONFIG`"
    , uniqueConstraints =  @UniqueConstraint(columnNames={"`LOGGINGCONFIGID`", "`NAME`"})
)
public class NamedLoggerConfig extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer namedLoggerConfigId;
     protected LoggingConfig loggingConfig;
     protected String name;
     protected Byte minLogLevel;
     protected Byte minLogLevelLocal;

    public NamedLoggerConfig() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="NamedLC_seq")}
	)

    
    @Column(name="`NAMEDLOGGERCONFIGID`", unique=true, nullable=false)
    public Integer getNamedLoggerConfigId() {
        return this.namedLoggerConfigId;
    }
    
    public void setNamedLoggerConfigId(Integer namedLoggerConfigId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("namedLoggerConfigId", this.namedLoggerConfigId, this.namedLoggerConfigId = namedLoggerConfigId);
        else
            this.namedLoggerConfigId = namedLoggerConfigId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`LOGGINGCONFIGID`", nullable=false)
    public LoggingConfig getLoggingConfig() {
        return this.loggingConfig;
    }
    
    public void setLoggingConfig(LoggingConfig loggingConfig) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("loggingConfig", this.loggingConfig, this.loggingConfig = loggingConfig);
        else
            this.loggingConfig = loggingConfig;
    }


    
    @Column(name="`NAME`", nullable=false, length=16777216)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("name", this.name, this.name = name);
        else
            this.name = name;
    }


    
    @Column(name="`MINLOGLEVEL`")
    public Byte getMinLogLevel() {
        return this.minLogLevel;
    }
    
    public void setMinLogLevel(Byte minLogLevel) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("minLogLevel", this.minLogLevel, this.minLogLevel = minLogLevel);
        else
            this.minLogLevel = minLogLevel;
    }


    
    @Column(name="`MINLOGLEVELLOCAL`")
    public Byte getMinLogLevelLocal() {
        return this.minLogLevelLocal;
    }
    
    public void setMinLogLevelLocal(Byte minLogLevelLocal) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("minLogLevelLocal", this.minLogLevelLocal, this.minLogLevelLocal = minLogLevelLocal);
        else
            this.minLogLevelLocal = minLogLevelLocal;
    }



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof NamedLoggerConfig) ) return false;
		 NamedLoggerConfig castOther = ( NamedLoggerConfig ) other;

		 return ( (this.getLoggingConfig()==castOther.getLoggingConfig()) || ( this.getLoggingConfig()!=null && castOther.getLoggingConfig()!=null && this.getLoggingConfig().equals(castOther.getLoggingConfig()) ) )
 && ( (this.getName()==castOther.getName()) || ( this.getName()!=null && castOther.getName()!=null && this.getName().equals(castOther.getName()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         result = 37 * result + ( getLoggingConfig() == null ? 0 : this.getLoggingConfig().hashCode() );
         result = 37 * result + ( getName() == null ? 0 : this.getName().hashCode() );
         
         
         return result;
   }


}


