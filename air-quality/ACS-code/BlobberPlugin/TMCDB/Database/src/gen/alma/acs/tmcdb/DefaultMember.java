package alma.acs.tmcdb;
// Generated Dec 3, 2018 9:54:59 PM by Hibernate Tools 4.3.1.Final


import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * DefaultMember generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`DEFAULTMEMBER`"
    , uniqueConstraints =  @UniqueConstraint(columnNames="`FAULTFAMILYID`")
)
public class DefaultMember extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer defaultMemberId;
     protected Location location;
     protected FaultFamily faultFamily;

    public DefaultMember() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="DefaulM_seq")}
	)

    
    @Column(name="`DEFAULTMEMBERID`", unique=true, nullable=false)
    public Integer getDefaultMemberId() {
        return this.defaultMemberId;
    }
    
    public void setDefaultMemberId(Integer defaultMemberId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("defaultMemberId", this.defaultMemberId, this.defaultMemberId = defaultMemberId);
        else
            this.defaultMemberId = defaultMemberId;
    }


@ManyToOne(cascade=CascadeType.PERSIST, fetch=FetchType.LAZY)@Cascade( {org.hibernate.annotations.CascadeType.SAVE_UPDATE, org.hibernate.annotations.CascadeType.LOCK} )
    @JoinColumn(name="`LOCATIONID`")
    public Location getLocation() {
        return this.location;
    }
    
    public void setLocation(Location location) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("location", this.location, this.location = location);
        else
            this.location = location;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`FAULTFAMILYID`", unique=true, nullable=false)
    public FaultFamily getFaultFamily() {
        return this.faultFamily;
    }
    
    public void setFaultFamily(FaultFamily faultFamily) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("faultFamily", this.faultFamily, this.faultFamily = faultFamily);
        else
            this.faultFamily = faultFamily;
    }



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof DefaultMember) ) return false;
		 DefaultMember castOther = ( DefaultMember ) other;

		 return ( (this.getFaultFamily()==castOther.getFaultFamily()) || ( this.getFaultFamily()!=null && castOther.getFaultFamily()!=null && this.getFaultFamily().equals(castOther.getFaultFamily()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         
         result = 37 * result + ( getFaultFamily() == null ? 0 : this.getFaultFamily().hashCode() );
         return result;
   }


}


